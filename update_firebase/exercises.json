[{"code": "/**\n * description: This is a suggestive pseudo-code on how to play the game.\n *              Take your time to go through it, as it helps for the next questions. \n * author: Doren Calliku (dcalliku@gmail.com)\n * date: 20/11/2019\n * edit history: v1. Added main steps\n *              v2. Changed header\n */             //<= missing name of the file, take all lines in the Header, select Header. \n\nopen crsg(code review serious game)\n\n// login\nif first time -> register ( email, username, password)\nelse -> login (username, password)\n\n// main logic\nfor each of the levels in the screen in order:\n\n  // open level\n  open level (click on \"play this level\")\n  read description of level \n  read code\n  check hint for number of total errors\n                //<= there is an extra space line here - Blank Lines\n                \n  // find errors\n  for each specific error type in checklist\n\n      // understanding errors\n      if do not know what error means -> check description in guide\n\n      // error found\n      if specific error in code\n      add error            // <= Both these lines are not indented, Indentation\n      add type\n\n      // no more errors to find\n      if number of errors you found is equal to the number of errors from the hint\n          break the loop \n\n  // end level \n  submit\n  check your score\n\n  // go back\n  go back to intro page\n  ", "errors": [{"lines": [1, 8], "reason": "Headers"}, {"lines": [24, 24], "reason": "Blank Lines"}, {"lines": [34, 35], "reason": "Indentation"}], "hints": ["Copy pasting is harmful."], "narrative": "<p>Welcome to the CRSG, this is a tutorial level to make sure you know how to play. \n                      You can start right away by giving a quick glance to the <strong> GUIDE</strong> to find the errors. \n                     Then you can review the code.</p>\n                      <p><strong> When you have found a defect, select the line(s) it is in. Than press the add button in the right corner below.\n                          It will be added to your defect list, from there you can select the reason for the defect. </strong></p>\n                       <p> Remember to make use of your <strong>checklist</strong> and <strong>guide</strong> . If you are not sure about the \n                          type of defect that you have found or how to select it, you should refer\n                           back to the guide.\n                                                                                  -Bilsen Team </p>"}, {"code": "\npackage lab03a;\n\nimport java.util.*;\n\n/**\n * Lab assg. 3b. Getting to know about decision making and loops.\n * @author Emre Acarturk \n * @version 16.10.2017\n */ \n\npublic class Lab03a {\n\n    public static void main(String[] args) {\n\n        // Declaration of variables.\n        Scanner in = new Scanner( System.in );\n        int n;\n        int evens;\n        int odds;\n        int sum;\n        int sumWithFormula;\n\n        // Instantiations.\n        evens = 0;\n        odds = 0;\n        sum = 0;\n        sumWithFormula = 0;\n\n        // Getting user input.\n        System.out.print( \"Enter 'n'  s.t. 'sum' is the sum of values x between 1 and n inclusive: \" );\n        try {\n            n = in.nextInt();\n            in.close();\n            System.out.println();\n\n            // Loop to go through values form 0 to 50 inclusive.\n            for( int x = 0 ; x <= 50 ; x++ ) {\n\n                // If a number isn't in an inclusive interval, it's exclusively outside.\n                if( x < 12 || x > 25 ) {\n                    System.out.print( x + \" is out of range 12-25. \" );\n                } else;\n\n                // A way to count how many odd and even numbers there are.\n                if( x % 2 == 0 ) evens++;\n                else odds++;\n\n                // The expected series of decisions, with given order.\n                if( x%5 == 0 ) {\n                    System.out.println( \"Hi Five\" );\n                } else if( x % 2 == 0 ) {\n                    System.out.println( \"Hi Two\" );\n                } else if( x % 3 == 0 || x % 7 == 0 ) {\n                    System.out.println( \"Hi ThreeOrSeven\" );\n                } else {\n                    System.out.println( \"Hi Others!\" );\n                }\n                System.out.println();\n\n                // The way we are expected to make sum without formula; used += for simplicity.\n                if( x >= 1 && x <= n ) {\n                    sum += x;\n                }\n\n            }\n\n            // The way we are expected to make sum with the formula.\n            // Because of the fact that upper multiplication is always divisible by 2, I didn't made 'sumWithFormula' double.\n            sumWithFormula = n*(n+1)/2;\n\n            // Giving output. Ternary is to simplify, and eliminate, an if statement by which would've lengthen the code.\n            System.out.println( \"There were \" + odds + \" odd and \" + evens + \" even numbers.\" );\n            System.out.println( \"The sum to n, \" + sum + \", and sum from the formula, \" +\n                                sumWithFormula + \", are \" + ( sum == sumWithFormula ? \"\" : \"not \" ) +\n                                \"consistent.\" );\n        }\n\n        catch( Exception e ) { System.out.println(\"Y U do dis?\"); };\n\n    }\n\n}\n", "errors": [{"lines": [6, 10], "reason": "Headers"}, {"lines": [38, 38], "reason": "Spaces"}, {"lines": [43, 43], "reason": "Other"}], "hints": ["Copy pasting is harmful."], "narrative": "<p>This level will be your first real taste of the game. This level consists of a simple java class written relatively well. \n                       Still something with this code smells. \n                       As always select the error reasons carefully and reasonably in order to get more points. \n                       Source: [acarturk-e (https://github.com/acarturk-e/CS101-Lab-Assignments/blob/master/lab03/lab03a/Lab03a.java)] </p>"}, {"code": "/* \nauthor: Doren\nfunctionality: prints diamond of a number\ndate: 12.11.2019\n*/\n\npublic class HelloWorld{\n    \n    /**\n     * This method prints the diamond of a number. \n     * For example, the diamond of 5 would be:\n          3  \n         2 2 \n        1   1\n         2 2 \n          3  \n     * @param number of the diamond 0 < number < 10\n     * @return null - we are printing\n    */\n    public static double createDiamond( int number)\n    {\n        // what is the length and width of diamond\n        int size; \n        int first_space; \n        int second_space;\n        int k;  // which number is to be printed next\n         \n        size = number * 2 - 1;\n        first_space = \"\";\n        second_space = \"\";\n        \n        // for each of the lines to be printed\n        for( int i=0; i < size; i++){\n            \n            // create space before printing the number\n            first_space = (number-i-1)% number;\n            if (first_space < 0){\n                first_space = - first_space;\n            }\n            for (int sp = 0; sp < first_space ; sp++) System.out.print(\" \");\n                \n            /*\n            Decides on which number to print. For example, for number =4\n            print: 4 3 2 1 2 3 4\n            index: 0 1 2 3 4 5 6\n            */\n            k = 0;\n            if ( i == 0){ \n                // if first one, print 4\n                k = number;\n            }\n            else if( i < number){  \n                // if i in decreasing from top of diamond\n                k = number-i;\n            } \n            else{  \n                // after the biggest horizontal width has passed\n                // index -> print , 4-4+2-> 2, 5-4+2->3\n                k = i - number + 2; // add error here\n            }\n    \n            // print the number\n            System.out.print(k);\n            \n            // if you are not in vertical edges, print twice, \n            // including space in the middle\n            if ( k != number){\n                second_space = size-(first_space*2)-2;\n                for (int sp = 0; sp < second_space ; sp++) System.out.print(\" \");\n                System.out.print(k);\n            }\n            \n                // go to next line\n                System.out.println();\n        }\n        return 0;\n       \n    }\n\n    public static void main(String []args){\n        createDiamond(5);\n    }\n}\n", "errors": [{"lines": [26, 26], "reason": "wrong naming"}, {"lines": [29, 29], "reason": "variable assignment"}, {"lines": [30, 30], "reason": "variable assignment"}, {"lines": [59, 59], "reason": "wrong functionality"}, {"lines": [75, 77], "reason": "indentation"}], "hints": ["Copy pasting is harmful."], "narrative": "<p>Thing are getting more serious. In this level you are reviewing a very simple arithmetic operation implemented on \n                            arrays however in order to get a high score you need to pay close attention to the operations performed and their \n                            validity.</p>"}]